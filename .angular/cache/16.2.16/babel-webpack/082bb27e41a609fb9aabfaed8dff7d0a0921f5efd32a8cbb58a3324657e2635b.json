{"ast":null,"code":"import * as Highcharts from 'highcharts';\nimport OrganizationModule from 'highcharts/modules/organization';\nimport ExportingModule from 'highcharts/modules/exporting';\nimport HighchartsMore from 'highcharts/highcharts-more';\nimport * as i0 from \"@angular/core\";\n// Initialize modules\nOrganizationModule(Highcharts);\nExportingModule(Highcharts);\nHighchartsMore(Highcharts);\nexport class HorizontalOrganizationChartVisualizerComponent {\n  ngAfterViewInit() {\n    Highcharts.chart('container', {\n      chart: {\n        height: 600,\n        inverted: false\n      },\n      title: {\n        text: 'Carnivora Phylogeny'\n      },\n      subtitle: {\n        text: 'Tracing the Evolutionary Relationship of Carnivores'\n      },\n      plotOptions: {\n        series: {\n          nodeWidth: '22%'\n        }\n      },\n      accessibility: {\n        point: {\n          descriptionFormat: '{toNode.name} ' + '{#if (eq toNode.level 1 )} is a distinct family within the ' + 'order of {fromNode.id}. {toNode.custom.info}{/if}' + '{#if (eq toNode.level 2 )} is a genus within the {fromNode.id}. ' + '{toNode.custom.info} {/if}' + '{#if (eq toNode.level 3 )} is a species within the ' + '{fromNode.id}. {toNode.custom.info} {/if}'\n        }\n      },\n      series: [{\n        type: 'organization',\n        name: 'Carnivora Phyologeny',\n        keys: ['from', 'to'],\n        data: [['Carnivora', 'Felidae'], ['Carnivora', 'Mustelidae'], ['Carnivora', 'Canidae'], ['Felidae', 'Panthera'], ['Mustelidae', 'Taxidea'], ['Mustelidae', 'Lutra'], ['Panthera', 'Panthera pardus'], ['Taxidea', 'Taxidea taxus'], ['Lutra', 'Lutra lutra'], ['Canidae', 'Canis'], ['Canis', 'Canis latrans'], ['Canis', 'Canis lupus']],\n        levels: [{\n          level: 0,\n          color: '#DEDDCF',\n          dataLabels: {\n            color: 'black'\n          }\n        }, {\n          level: 1,\n          color: '#DEDDCF',\n          dataLabels: {\n            color: 'black'\n          },\n          height: 25\n        }, {\n          level: 2,\n          color: '#DEDDCF',\n          dataLabels: {\n            color: 'black'\n          }\n        }, {\n          level: 3,\n          dataLabels: {\n            color: 'black'\n          }\n        }],\n        nodes: [/* your nodes array here (no change) */],\n        colorByPoint: false,\n        borderColor: 'black',\n        borderWidth: 2\n      }],\n      tooltip: {\n        outside: true,\n        format: '{point.custom.info}',\n        style: {\n          width: '320px'\n        }\n      },\n      exporting: {\n        allowHTML: true,\n        sourceWidth: 800,\n        sourceHeight: 600\n      }\n    });\n  }\n  static {\n    this.ɵfac = function HorizontalOrganizationChartVisualizerComponent_Factory(t) {\n      return new (t || HorizontalOrganizationChartVisualizerComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: HorizontalOrganizationChartVisualizerComponent,\n      selectors: [[\"app-horizontal-organization-chart-visualizer\"]],\n      decls: 1,\n      vars: 0,\n      consts: [[\"id\", \"container\", 2, \"min-width\", \"320px\", \"height\", \"600px\", \"margin\", \"0 auto\"]],\n      template: function HorizontalOrganizationChartVisualizerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", 0);\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Highcharts","OrganizationModule","ExportingModule","HighchartsMore","HorizontalOrganizationChartVisualizerComponent","ngAfterViewInit","chart","height","inverted","title","text","subtitle","plotOptions","series","nodeWidth","accessibility","point","descriptionFormat","type","name","keys","data","levels","level","color","dataLabels","nodes","colorByPoint","borderColor","borderWidth","tooltip","outside","format","style","width","exporting","allowHTML","sourceWidth","sourceHeight","selectors","decls","vars","consts","template","HorizontalOrganizationChartVisualizerComponent_Template","rf","ctx","i0","ɵɵelement"],"sources":["C:\\Users\\DELL\\flow-visualizer-test\\src\\app\\horizontal-organization-chart-visualizer\\horizontal-organization-chart-visualizer.component.ts","C:\\Users\\DELL\\flow-visualizer-test\\src\\app\\horizontal-organization-chart-visualizer\\horizontal-organization-chart-visualizer.component.html"],"sourcesContent":["import { Component, AfterViewInit } from '@angular/core';\nimport * as Highcharts from 'highcharts';\nimport OrganizationModule from 'highcharts/modules/organization';\nimport ExportingModule from 'highcharts/modules/exporting';\nimport ExportData from 'highcharts/modules/export-data';\nimport HighchartsMore from 'highcharts/highcharts-more';\n\n// Initialize modules\nOrganizationModule(Highcharts);\nExportingModule(Highcharts);\nHighchartsMore(Highcharts);\n@Component({\n  selector: 'app-horizontal-organization-chart-visualizer',\n  templateUrl: './horizontal-organization-chart-visualizer.component.html',\n  styleUrls: ['./horizontal-organization-chart-visualizer.component.css']\n})\nexport class HorizontalOrganizationChartVisualizerComponent implements AfterViewInit {\n  ngAfterViewInit(): void {\n  Highcharts.chart('container' as any, {\n    chart: {\n      height: 600,\n      inverted: false\n    },\n    title: {\n      text: 'Carnivora Phylogeny'\n    },\n    subtitle: {\n      text: 'Tracing the Evolutionary Relationship of Carnivores'\n    },\n    plotOptions: {\n      series: {\n        nodeWidth: '22%'\n      }\n    },\n    accessibility: {\n      point: {\n        descriptionFormat:\n          '{toNode.name} ' +\n          '{#if (eq toNode.level 1 )} is a distinct family within the ' +\n          'order of {fromNode.id}. {toNode.custom.info}{/if}' +\n          '{#if (eq toNode.level 2 )} is a genus within the {fromNode.id}. ' +\n          '{toNode.custom.info} {/if}' +\n          '{#if (eq toNode.level 3 )} is a species within the ' +\n          '{fromNode.id}. {toNode.custom.info} {/if}'\n      }\n    },\n    series: [\n      {\n        type: 'organization',\n        name: 'Carnivora Phyologeny',\n        keys: ['from', 'to'],\n        data: [\n          ['Carnivora', 'Felidae'],\n          ['Carnivora', 'Mustelidae'],\n          ['Carnivora', 'Canidae'],\n          ['Felidae', 'Panthera'],\n          ['Mustelidae', 'Taxidea'],\n          ['Mustelidae', 'Lutra'],\n          ['Panthera', 'Panthera pardus'],\n          ['Taxidea', 'Taxidea taxus'],\n          ['Lutra', 'Lutra lutra'],\n          ['Canidae', 'Canis'],\n          ['Canis', 'Canis latrans'],\n          ['Canis', 'Canis lupus']\n        ],\n        levels: [\n          {\n            level: 0,\n            color: '#DEDDCF',\n            dataLabels: {\n              color: 'black'\n            }\n          },\n          {\n            level: 1,\n            color: '#DEDDCF',\n            dataLabels: {\n              color: 'black'\n            },\n            height: 25\n          },\n          {\n            level: 2,\n            color: '#DEDDCF',\n            dataLabels: {\n              color: 'black'\n            }\n          },\n          {\n            level: 3,\n            dataLabels: {\n              color: 'black'\n            }\n          }\n        ],\n        nodes: [/* your nodes array here (no change) */],\n        colorByPoint: false,\n        borderColor: 'black',\n        borderWidth: 2\n      }\n    ],\n    tooltip: {\n      outside: true,\n      format: '{point.custom.info}',\n      style: {\n        width: '320px'\n      }\n    },\n    exporting: {\n      allowHTML: true,\n      sourceWidth: 800,\n      sourceHeight: 600\n    }\n  });\n}\n}\n}\n","<div id=\"container\" style=\"min-width: 320px; height: 600px; margin: 0 auto\"></div>\n"],"mappings":"AACA,OAAO,KAAKA,UAAU,MAAM,YAAY;AACxC,OAAOC,kBAAkB,MAAM,iCAAiC;AAChE,OAAOC,eAAe,MAAM,8BAA8B;AAE1D,OAAOC,cAAc,MAAM,4BAA4B;;AAEvD;AACAF,kBAAkB,CAACD,UAAU,CAAC;AAC9BE,eAAe,CAACF,UAAU,CAAC;AAC3BG,cAAc,CAACH,UAAU,CAAC;AAM1B,OAAM,MAAOI,8CAA8C;EACzDC,eAAeA,CAAA;IACfL,UAAU,CAACM,KAAK,CAAC,WAAkB,EAAE;MACnCA,KAAK,EAAE;QACLC,MAAM,EAAE,GAAG;QACXC,QAAQ,EAAE;OACX;MACDC,KAAK,EAAE;QACLC,IAAI,EAAE;OACP;MACDC,QAAQ,EAAE;QACRD,IAAI,EAAE;OACP;MACDE,WAAW,EAAE;QACXC,MAAM,EAAE;UACNC,SAAS,EAAE;;OAEd;MACDC,aAAa,EAAE;QACbC,KAAK,EAAE;UACLC,iBAAiB,EACf,gBAAgB,GAChB,6DAA6D,GAC7D,mDAAmD,GACnD,kEAAkE,GAClE,4BAA4B,GAC5B,qDAAqD,GACrD;;OAEL;MACDJ,MAAM,EAAE,CACN;QACEK,IAAI,EAAE,cAAc;QACpBC,IAAI,EAAE,sBAAsB;QAC5BC,IAAI,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC;QACpBC,IAAI,EAAE,CACJ,CAAC,WAAW,EAAE,SAAS,CAAC,EACxB,CAAC,WAAW,EAAE,YAAY,CAAC,EAC3B,CAAC,WAAW,EAAE,SAAS,CAAC,EACxB,CAAC,SAAS,EAAE,UAAU,CAAC,EACvB,CAAC,YAAY,EAAE,SAAS,CAAC,EACzB,CAAC,YAAY,EAAE,OAAO,CAAC,EACvB,CAAC,UAAU,EAAE,iBAAiB,CAAC,EAC/B,CAAC,SAAS,EAAE,eAAe,CAAC,EAC5B,CAAC,OAAO,EAAE,aAAa,CAAC,EACxB,CAAC,SAAS,EAAE,OAAO,CAAC,EACpB,CAAC,OAAO,EAAE,eAAe,CAAC,EAC1B,CAAC,OAAO,EAAE,aAAa,CAAC,CACzB;QACDC,MAAM,EAAE,CACN;UACEC,KAAK,EAAE,CAAC;UACRC,KAAK,EAAE,SAAS;UAChBC,UAAU,EAAE;YACVD,KAAK,EAAE;;SAEV,EACD;UACED,KAAK,EAAE,CAAC;UACRC,KAAK,EAAE,SAAS;UAChBC,UAAU,EAAE;YACVD,KAAK,EAAE;WACR;UACDjB,MAAM,EAAE;SACT,EACD;UACEgB,KAAK,EAAE,CAAC;UACRC,KAAK,EAAE,SAAS;UAChBC,UAAU,EAAE;YACVD,KAAK,EAAE;;SAEV,EACD;UACED,KAAK,EAAE,CAAC;UACRE,UAAU,EAAE;YACVD,KAAK,EAAE;;SAEV,CACF;QACDE,KAAK,EAAE,CAAC,wCAAwC;QAChDC,YAAY,EAAE,KAAK;QACnBC,WAAW,EAAE,OAAO;QACpBC,WAAW,EAAE;OACd,CACF;MACDC,OAAO,EAAE;QACPC,OAAO,EAAE,IAAI;QACbC,MAAM,EAAE,qBAAqB;QAC7BC,KAAK,EAAE;UACLC,KAAK,EAAE;;OAEV;MACDC,SAAS,EAAE;QACTC,SAAS,EAAE,IAAI;QACfC,WAAW,EAAE,GAAG;QAChBC,YAAY,EAAE;;KAEjB,CAAC;EACJ;;;uBAlGalC,8CAA8C;IAAA;EAAA;;;YAA9CA,8CAA8C;MAAAmC,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wDAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UChB3DE,EAAA,CAAAC,SAAA,aAAkF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}